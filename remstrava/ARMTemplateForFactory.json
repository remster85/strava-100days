{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "remstrava"
		},
		"AzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage'"
		},
		"CosmosDb1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDb1'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_vos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_vos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "activities//"
							},
							{
								"name": "Destination",
								"value": "remstrava"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_vos",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_vos",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_vos')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_vos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_vos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "remstrava"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_vos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "activities"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"resource_state": {
							"type": "integer"
						},
						"athlete": {
							"type": "object",
							"properties": {
								"id": {
									"type": "integer"
								},
								"resource_state": {
									"type": "integer"
								}
							}
						},
						"name": {
							"type": "string"
						},
						"distance": {
							"type": "number"
						},
						"moving_time": {
							"type": "integer"
						},
						"elapsed_time": {
							"type": "integer"
						},
						"total_elevation_gain": {
							"type": "number"
						},
						"type": {
							"type": "string"
						},
						"workout_type": {
							"type": "integer"
						},
						"id": {
							"type": "integer"
						},
						"external_id": {
							"type": "string"
						},
						"upload_id": {
							"type": "integer"
						},
						"start_date": {
							"type": "string"
						},
						"start_date_local": {
							"type": "string"
						},
						"timezone": {
							"type": "string"
						},
						"utc_offset": {
							"type": "number"
						},
						"start_latlng": {
							"type": "array",
							"items": {
								"type": "number"
							}
						},
						"end_latlng": {
							"type": "array",
							"items": {
								"type": "number"
							}
						},
						"location_city": {
							"type": "null"
						},
						"location_state": {
							"type": "null"
						},
						"location_country": {
							"type": "string"
						},
						"start_latitude": {
							"type": "number"
						},
						"start_longitude": {
							"type": "number"
						},
						"achievement_count": {
							"type": "integer"
						},
						"kudos_count": {
							"type": "integer"
						},
						"comment_count": {
							"type": "integer"
						},
						"athlete_count": {
							"type": "integer"
						},
						"photo_count": {
							"type": "integer"
						},
						"map": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"summary_polyline": {
									"type": "string"
								},
								"resource_state": {
									"type": "integer"
								}
							}
						},
						"trainer": {
							"type": "boolean"
						},
						"commute": {
							"type": "boolean"
						},
						"manual": {
							"type": "boolean"
						},
						"private": {
							"type": "boolean"
						},
						"visibility": {
							"type": "string"
						},
						"flagged": {
							"type": "boolean"
						},
						"gear_id": {
							"type": "string"
						},
						"from_accepted_tag": {
							"type": "boolean"
						},
						"upload_id_str": {
							"type": "string"
						},
						"average_speed": {
							"type": "number"
						},
						"max_speed": {
							"type": "number"
						},
						"has_heartrate": {
							"type": "boolean"
						},
						"heartrate_opt_out": {
							"type": "boolean"
						},
						"display_hide_heartrate_option": {
							"type": "boolean"
						},
						"elev_high": {
							"type": "number"
						},
						"elev_low": {
							"type": "number"
						},
						"pr_count": {
							"type": "integer"
						},
						"total_photo_count": {
							"type": "integer"
						},
						"has_kudoed": {
							"type": "boolean"
						},
						"average_watts": {
							"type": "number"
						},
						"kilojoules": {
							"type": "number"
						},
						"device_watts": {
							"type": "boolean"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDb1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDb1_connectionString')]"
				}
			},
			"dependsOn": []
		}
	]
}